Traceback (most recent call last):
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import taxcalc as tc
import behresp

# use publicly-available CPS input file
recs = tc.Records.cps_constructor()

# specify Calculator object for static analysis of current-law policy
pol = tc.Policy()
calc1 = tc.Calculator(policy=pol, records=recs)

CYR = 2020

# calculate current-law tax liabilities for CYR
calc1.advance_to_year(CYR)
calc1.calc_all()

# calculate marginal tax rate wrt cash charitable giving
(_, _, mtr1) = calc1.mtr('e19800', calc_all_already_called=True,
                         wrt_full_compensation=False)

# specify Calculator object for static analysis of reform policy
# TODO: Move this reform online so it can be read non-locally.
pol.implement_reform(tc.Policy.read_json_reform('github://PSLmodels:Tax-Calculator@master/docs/recipes/_static/reformB.json'))
calc2 = tc.Calculator(policy=pol, records=recs)

# calculate reform tax liabilities for CYR
calc2.advance_to_year(CYR)
calc2.calc_all()

# calculate marginal tax rate wrt cash charitable giving
(_, _, mtr2) = calc2.mtr('e19800', calc_all_already_called=True,
                         wrt_full_compensation=False)

# extract variables needed for quantity_response function
# (note the aftertax price is 1+mtr because mtr wrt charity is non-positive)
vdf = calc1.dataframe(['s006', 'e19800', 'e00200'])
vdf['price1'] = 1.0 + mtr1
vdf['price2'] = 1.0 + mtr2
vdf['atinc1'] = calc1.array('aftertax_income')
vdf['atinc2'] = calc2.array('aftertax_income')

# group filing units into earnings groups with different response elasticities
# (note earnings groups are just an example based on no empirical results)
earnings_bins = [-9e99, 50e3, 9e99]  # two groups: below and above $50,000
vdf = tc.add_income_table_row_variable(vdf, 'e00200', earnings_bins)
gbydf = vdf.groupby('table_row', as_index=False)

# compute percentage response in charitable giving
# (note elasticity values are just an example based on no empirical results)
PRICE_ELASTICITY = [-0.1, -0.4]
INCOME_ELASTICITY = [0.1, 0.1]
print('\nResponse in Charitable Giving by Earnings Group')
results = '{:18s}\t{:8.3f}\t{:8.3f}\t{:8.2f}'
colhead = '{:18s}\t{:>8s}\t{:>8s}\t{:>8s}'
print(colhead.format('Earnings Group', 'Num(#M)', 'Resp($B)', 'Resp(%)'))
tot_funits = 0.
tot_response = 0.
tot_baseline = 0.
idx = 0
for grp_interval, grp in gbydf:
    funits = grp['s006'].sum() * 1e-6
    tot_funits += funits
    response = behresp.quantity_response(grp['e19800'],
                                         PRICE_ELASTICITY[idx],
                                         grp['price1'],
                                         grp['price2'],
                                         INCOME_ELASTICITY[idx],
                                         grp['atinc1'],
                                         grp['atinc2'])
    grp_response = (response * grp['s006']).sum() * 1e-9
    tot_response += grp_response
    grp_baseline = (grp['e19800'] * grp['s006']).sum() * 1e-9
    tot_baseline += grp_baseline
    pct_response = 100. * grp_response / grp_baseline
    glabel = '[{:.8g}, {:.8g})'.format(grp_interval.left, grp_interval.right)
    print(results.format(glabel, funits, grp_response, pct_response))
    idx += 1
pct_response = 100. * tot_response / tot_baseline
print(results.format('ALL', tot_funits, tot_response, pct_response))
------------------


[31m---------------------------------------------------------------------------[39m
[31mHTTPError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 23[39m
[32m     18[39m (_, _, mtr1) = calc1.mtr([33m'[39m[33me19800[39m[33m'[39m, calc_all_already_called=[38;5;28;01mTrue[39;00m,
[32m     19[39m                          wrt_full_compensation=[38;5;28;01mFalse[39;00m)
[32m     21[39m [38;5;66;03m# specify Calculator object for static analysis of reform policy[39;00m
[32m     22[39m [38;5;66;03m# TODO: Move this reform online so it can be read non-locally.[39;00m
[32m---> [39m[32m23[39m pol.implement_reform([43mtc[49m[43m.[49m[43mPolicy[49m[43m.[49m[43mread_json_reform[49m[43m([49m[33;43m'[39;49m[33;43mgithub://PSLmodels:Tax-Calculator@master/docs/recipes/_static/reformB.json[39;49m[33;43m'[39;49m[43m)[49m)
[32m     24[39m calc2 = tc.Calculator(policy=pol, records=recs)
[32m     26[39m [38;5;66;03m# calculate reform tax liabilities for CYR[39;00m

[36mFile [39m[32m~/work/Tax-Calculator/Tax-Calculator/taxcalc/policy.py:168[39m, in [36mPolicy.read_json_reform[39m[34m(obj)[39m
[32m    160[39m [38;5;129m@staticmethod[39m
[32m    161[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mread_json_reform[39m(obj):
[32m    162[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    163[39m [33;03m    Return a reform dictionary suitable for use with implement_reform[39;00m
[32m    164[39m [33;03m    method generated from the specified JSON object, which can be None or[39;00m
[32m    165[39m [33;03m    a string containing a local filename, a URL beginning with 'http'[39;00m
[32m    166[39m [33;03m    pointing to a valid JSON file hosted online, or a valid JSON text.[39;00m
[32m    167[39m [33;03m    """[39;00m
[32m--> [39m[32m168[39m     [38;5;28;01mreturn[39;00m [43mParameters[49m[43m.[49m[43m_read_json_revision[49m[43m([49m[43mobj[49m[43m,[49m[43m [49m[33;43m'[39;49m[33;43mpolicy[39;49m[33;43m'[39;49m[43m)[49m

[36mFile [39m[32m~/work/Tax-Calculator/Tax-Calculator/taxcalc/parameters.py:759[39m, in [36mParameters._read_json_revision[39m[34m(obj, topkey)[39m
[32m    756[39m [38;5;28;01mif[39;00m obj [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    757[39m     [38;5;28;01mreturn[39;00m {}
[32m--> [39m[32m759[39m full_dict = [43mparamtools[49m[43m.[49m[43mread_json[49m[43m([49m[43mobj[49m[43m)[49m
[32m    761[39m [38;5;66;03m# check top-level key contents of dictionary[39;00m
[32m    762[39m [38;5;28;01mif[39;00m topkey [38;5;129;01min[39;00m full_dict.keys():

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/paramtools/utils.py:105[39m, in [36mread_json[39m[34m(params_or_path, storage_options)[39m
[32m     89[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mread_json[39m(
[32m     90[39m     params_or_path: FileDictStringLike,
[32m     91[39m     storage_options: Optional[Dict[[38;5;28mstr[39m, Any]] = [38;5;28;01mNone[39;00m,
[32m     92[39m ):
[32m     93[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m     94[39m [33;03m    Read JSON data of the form:[39;00m
[32m     95[39m [33;03m    - Dict.[39;00m
[32m   (...)[39m[32m    103[39m 
[32m    104[39m [33;03m    """[39;00m
[32m--> [39m[32m105[39m     res = [43m_read[49m[43m([49m[43mparams_or_path[49m[43m,[49m[43m [49m[43mstorage_options[49m[43m)[49m
[32m    106[39m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(res, [38;5;28mstr[39m):
[32m    107[39m         [38;5;28;01mtry[39;00m:

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/paramtools/utils.py:50[39m, in [36m_read[39m[34m(params_or_path, storage_options)[39m
[32m     47[39m         [38;5;28;01mreturn[39;00m f.read()
[32m     49[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(params_or_path, [38;5;28mstr[39m) [38;5;129;01mand[39;00m _is_url(params_or_path):
[32m---> [39m[32m50[39m     [38;5;28;01mwith[39;00m [43mfsspec[49m[43m.[49m[43mopen[49m[43m([49m[43mparams_or_path[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mr[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43m([49m[43mstorage_options[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m)[49m [38;5;28;01mas[39;00m f:
[32m     51[39m         [38;5;28;01mreturn[39;00m f.read()
[32m     53[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(params_or_path, [38;5;28mstr[39m):

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/core.py:491[39m, in [36mopen[39m[34m(urlpath, mode, compression, encoding, errors, protocol, newline, expand, **kwargs)[39m
[32m    433[39m [38;5;250m[39m[33;03m"""Given a path or paths, return one ``OpenFile`` object.[39;00m
[32m    434[39m 
[32m    435[39m [33;03mParameters[39;00m
[32m   (...)[39m[32m    488[39m [33;03m  https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations[39;00m
[32m    489[39m [33;03m"""[39;00m
[32m    490[39m expand = DEFAULT_EXPAND [38;5;28;01mif[39;00m expand [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m expand
[32m--> [39m[32m491[39m out = [43mopen_files[49m[43m([49m
[32m    492[39m [43m    [49m[43murlpath[49m[43m=[49m[43m[[49m[43murlpath[49m[43m][49m[43m,[49m
[32m    493[39m [43m    [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m    494[39m [43m    [49m[43mcompression[49m[43m=[49m[43mcompression[49m[43m,[49m
[32m    495[39m [43m    [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m
[32m    496[39m [43m    [49m[43merrors[49m[43m=[49m[43merrors[49m[43m,[49m
[32m    497[39m [43m    [49m[43mprotocol[49m[43m=[49m[43mprotocol[49m[43m,[49m
[32m    498[39m [43m    [49m[43mnewline[49m[43m=[49m[43mnewline[49m[43m,[49m
[32m    499[39m [43m    [49m[43mexpand[49m[43m=[49m[43mexpand[49m[43m,[49m
[32m    500[39m [43m    [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m,[49m
[32m    501[39m [43m[49m[43m)[49m
[32m    502[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m out:
[32m    503[39m     [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m(urlpath)

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/core.py:295[39m, in [36mopen_files[39m[34m(urlpath, mode, compression, encoding, errors, name_function, num, protocol, newline, auto_mkdir, expand, **kwargs)[39m
[32m    216[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_files[39m(
[32m    217[39m     urlpath,
[32m    218[39m     mode=[33m"[39m[33mrb[39m[33m"[39m,
[32m   (...)[39m[32m    228[39m     **kwargs,
[32m    229[39m ):
[32m    230[39m [38;5;250m    [39m[33;03m"""Given a path or paths, return a list of ``OpenFile`` objects.[39;00m
[32m    231[39m 
[32m    232[39m [33;03m    For writing, a str path must contain the "*" character, which will be filled[39;00m
[32m   (...)[39m[32m    293[39m [33;03m      https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations[39;00m
[32m    294[39m [33;03m    """[39;00m
[32m--> [39m[32m295[39m     fs, fs_token, paths = [43mget_fs_token_paths[49m[43m([49m
[32m    296[39m [43m        [49m[43murlpath[49m[43m,[49m
[32m    297[39m [43m        [49m[43mmode[49m[43m,[49m
[32m    298[39m [43m        [49m[43mnum[49m[43m=[49m[43mnum[49m[43m,[49m
[32m    299[39m [43m        [49m[43mname_function[49m[43m=[49m[43mname_function[49m[43m,[49m
[32m    300[39m [43m        [49m[43mstorage_options[49m[43m=[49m[43mkwargs[49m[43m,[49m
[32m    301[39m [43m        [49m[43mprotocol[49m[43m=[49m[43mprotocol[49m[43m,[49m
[32m    302[39m [43m        [49m[43mexpand[49m[43m=[49m[43mexpand[49m[43m,[49m
[32m    303[39m [43m    [49m[43m)[49m
[32m    304[39m     [38;5;28;01mif[39;00m fs.protocol == [33m"[39m[33mfile[39m[33m"[39m:
[32m    305[39m         fs.auto_mkdir = auto_mkdir

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/core.py:667[39m, in [36mget_fs_token_paths[39m[34m(urlpath, mode, num, name_function, storage_options, protocol, expand)[39m
[32m    665[39m     inkwargs[[33m"[39m[33mfo[39m[33m"[39m] = urls
[32m    666[39m paths, protocol, _ = chain[[32m0[39m]
[32m--> [39m[32m667[39m fs = [43mfilesystem[49m[43m([49m[43mprotocol[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43minkwargs[49m[43m)[49m
[32m    668[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(urlpath, ([38;5;28mlist[39m, [38;5;28mtuple[39m, [38;5;28mset[39m)):
[32m    669[39m     pchains = [
[32m    670[39m         _un_chain(stringify_path(u), storage_options [38;5;129;01mor[39;00m {})[[32m0[39m] [38;5;28;01mfor[39;00m u [38;5;129;01min[39;00m urlpath
[32m    671[39m     ]

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/registry.py:322[39m, in [36mfilesystem[39m[34m(protocol, **storage_options)[39m
[32m    315[39m     warnings.warn(
[32m    316[39m         [33m"[39m[33mThe [39m[33m'[39m[33marrow_hdfs[39m[33m'[39m[33m protocol has been deprecated and will be [39m[33m"[39m
[32m    317[39m         [33m"[39m[33mremoved in the future. Specify it as [39m[33m'[39m[33mhdfs[39m[33m'[39m[33m.[39m[33m"[39m,
[32m    318[39m         [38;5;167;01mDeprecationWarning[39;00m,
[32m    319[39m     )
[32m    321[39m [38;5;28mcls[39m = get_filesystem_class(protocol)
[32m--> [39m[32m322[39m [38;5;28;01mreturn[39;00m [38;5;28;43mcls[39;49m[43m([49m[43m*[49m[43m*[49m[43mstorage_options[49m[43m)[49m

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/spec.py:81[39m, in [36m_Cached.__call__[39m[34m(cls, *args, **kwargs)[39m
[32m     79[39m     [38;5;28;01mreturn[39;00m [38;5;28mcls[39m._cache[token]
[32m     80[39m [38;5;28;01melse[39;00m:
[32m---> [39m[32m81[39m     obj = [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[43m.[49m[34;43m__call__[39;49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m     82[39m     [38;5;66;03m# Setting _fs_token here causes some static linters to complain.[39;00m
[32m     83[39m     obj._fs_token_ = token

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/implementations/github.py:66[39m, in [36mGithubFileSystem.__init__[39m[34m(self, org, repo, sha, username, token, timeout, **kwargs)[39m
[32m     63[39m     sha = r.json()[[33m"[39m[33mdefault_branch[39m[33m"[39m]
[32m     65[39m [38;5;28mself[39m.root = sha
[32m---> [39m[32m66[39m [38;5;28;43mself[39;49m[43m.[49m[43mls[49m[43m([49m[33;43m"[39;49m[33;43m"[39;49m[43m)[49m
[32m     67[39m [38;5;28;01mtry[39;00m:
[32m     68[39m     [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01m.[39;00m[34;01mhttp[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m HTTPFileSystem

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/fsspec/implementations/github.py:175[39m, in [36mGithubFileSystem.ls[39m[34m(self, path, detail, sha, _sha, **kwargs)[39m
[32m    173[39m [38;5;28;01mif[39;00m r.status_code == [32m404[39m:
[32m    174[39m     [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m(path)
[32m--> [39m[32m175[39m [43mr[49m[43m.[49m[43mraise_for_status[49m[43m([49m[43m)[49m
[32m    176[39m types = {[33m"[39m[33mblob[39m[33m"[39m: [33m"[39m[33mfile[39m[33m"[39m, [33m"[39m[33mtree[39m[33m"[39m: [33m"[39m[33mdirectory[39m[33m"[39m}
[32m    177[39m out = [
[32m    178[39m     {
[32m    179[39m         [33m"[39m[33mname[39m[33m"[39m: path + [33m"[39m[33m/[39m[33m"[39m + f[[33m"[39m[33mpath[39m[33m"[39m] [38;5;28;01mif[39;00m path [38;5;28;01melse[39;00m f[[33m"[39m[33mpath[39m[33m"[39m],
[32m   (...)[39m[32m    186[39m     [38;5;28;01mif[39;00m f[[33m"[39m[33mtype[39m[33m"[39m] [38;5;129;01min[39;00m types
[32m    187[39m ]

[36mFile [39m[32m/usr/share/miniconda/envs/taxcalc-dev/lib/python3.11/site-packages/requests/models.py:1026[39m, in [36mResponse.raise_for_status[39m[34m(self)[39m
[32m   1021[39m     http_error_msg = (
[32m   1022[39m         [33mf[39m[33m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m.status_code[38;5;132;01m}[39;00m[33m Server Error: [39m[38;5;132;01m{[39;00mreason[38;5;132;01m}[39;00m[33m for url: [39m[38;5;132;01m{[39;00m[38;5;28mself[39m.url[38;5;132;01m}[39;00m[33m"[39m
[32m   1023[39m     )
[32m   1025[39m [38;5;28;01mif[39;00m http_error_msg:
[32m-> [39m[32m1026[39m     [38;5;28;01mraise[39;00m HTTPError(http_error_msg, response=[38;5;28mself[39m)

[31mHTTPError[39m: 403 Client Error: rate limit exceeded for url: https://api.github.com/repos/PSLmodels/Tax-Calculator/git/trees/master

